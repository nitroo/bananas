#!/usr/bin/env ruby
require "bananas"
require "optparse"

ARGV << "-h" if ARGV.empty?

options = {}
o = OptionParser.new do |opts|
  opts.banner      = "usage: bananas.rb [options]"
  options[:module] = "Object"
  options[:with]   = []

  opts.on("-m", "--module [MOD]", "The module to search for monkey patches. Required.") do |m|
    options[:module] = m.capitalize
    Object.const_defined? options[:module] or raise TypeError
  end

  opts.on("-r", "--require X,Y,Z", "The list of dependencies to search with.") do |r|
    options[:with].concat String(r).split(",")
    options[:with].each {|r| require r }
  end

  opts.on("-h", "--help", "Print this message.") do |h|
    puts opts
    exit
  end

  opts.on("-v", "--version", "Print version information.") do |v|
    puts Bananas::VERSION
    exit
  end
end

begin
  o.parse!

  fail unless o.default_argv.empty?

  Bananas.monkey_patches(Object.const_get options[:module])
rescue LoadError
  puts "fatal: Couldn't require dependencies. '#{options[:with].join}'"
rescue TypeError
  puts "fatal: Couldn't find a module. '#{options[:module]}'"
rescue
  puts o
end